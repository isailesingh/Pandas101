Why Use Pandas?
Pandas is a powerful Python library designed for data manipulation and analysis. It provides intuitive tools for handling data in tabular form (rows and columns), making tasks like data cleaning, transformation, and visualization straightforward.

Key Use Cases:
-> Data Manipulation: Clean, reshape, and transform data efficiently.
-> Data Visualization: Integrate seamlessly with visualization libraries like Matplotlib and Seaborn.

===================

Chapter 1: DataFrames
A DataFrame is a two-dimensional labeled data structure. It can hold data of different types (numeric, categorical, etc.), making it ideal for most datasets.

-- Exploring Your Dataset
When you get your hands on new data, the first step is exploration. Pandas provides several methods to understand your dataset:

-> head(): View the first few rows of the dataset.
  || import pandas as pd
  df = pd.DataFrame({"A": [1, 2, 3], "B": [4, 5, 6]})
  print(df.head())

-> info(): Get details about column names, data types, and missing values.
  || print(df.info())

-> shape: Returns the dimensions of the dataset as a tuple (rows, columns).
  || print(df.shape)  # Output: (3, 2)

-> describe(): Provides summary statistics for numerical columns, like mean and median.
  || print(df.describe())

Other Useful Attributes and Methods:
-> columns: Lists column names.
  || print(df.columns)  # Output: Index(['A', 'B'], dtype='object')

-> index: Displays the index of rows.
  || print(df.index)  # Output: RangeIndex(start=0, stop=3, step=1)

